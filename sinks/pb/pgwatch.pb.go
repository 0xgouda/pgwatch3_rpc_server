// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pgwatch.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SyncOp represents synchronization operations for metrics.
// The actual constants are defined in internal/sinks/types.go
// and should be used instead of these protobuf-generated constants.
type SyncOp int32

const (
	SyncOp_InvalidOp SyncOp = 0
	SyncOp_AddOp     SyncOp = 1
	SyncOp_DeleteOp  SyncOp = 2
	SyncOp_DefineOp  SyncOp = 3
)

// Enum value maps for SyncOp.
var (
	SyncOp_name = map[int32]string{
		0: "InvalidOp",
		1: "AddOp",
		2: "DeleteOp",
		3: "DefineOp",
	}
	SyncOp_value = map[string]int32{
		"InvalidOp": 0,
		"AddOp":     1,
		"DeleteOp":  2,
		"DefineOp":  3,
	}
)

func (x SyncOp) Enum() *SyncOp {
	p := new(SyncOp)
	*p = x
	return p
}

func (x SyncOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncOp) Descriptor() protoreflect.EnumDescriptor {
	return file_pgwatch_proto_enumTypes[0].Descriptor()
}

func (SyncOp) Type() protoreflect.EnumType {
	return &file_pgwatch_proto_enumTypes[0]
}

func (x SyncOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncOp.Descriptor instead.
func (SyncOp) EnumDescriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{0}
}

type Reply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logmsg        string                 `protobuf:"bytes,1,opt,name=logmsg,proto3" json:"logmsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_pgwatch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{0}
}

func (x *Reply) GetLogmsg() string {
	if x != nil {
		return x.Logmsg
	}
	return ""
}

type MeasurementEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DBName        string                 `protobuf:"bytes,1,opt,name=DBName,proto3" json:"DBName,omitempty"`
	MetricName    string                 `protobuf:"bytes,2,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	CustomTags    map[string]string      `protobuf:"bytes,3,rep,name=CustomTags,proto3" json:"CustomTags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Data          []*structpb.Struct     `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasurementEnvelope) Reset() {
	*x = MeasurementEnvelope{}
	mi := &file_pgwatch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasurementEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementEnvelope) ProtoMessage() {}

func (x *MeasurementEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementEnvelope.ProtoReflect.Descriptor instead.
func (*MeasurementEnvelope) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{1}
}

func (x *MeasurementEnvelope) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *MeasurementEnvelope) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MeasurementEnvelope) GetCustomTags() map[string]string {
	if x != nil {
		return x.CustomTags
	}
	return nil
}

func (x *MeasurementEnvelope) GetData() []*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type SyncReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DBName        string                 `protobuf:"bytes,1,opt,name=DBName,proto3" json:"DBName,omitempty"`
	MetricName    string                 `protobuf:"bytes,2,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	Operation     SyncOp                 `protobuf:"varint,3,opt,name=Operation,proto3,enum=SyncOp" json:"Operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	mi := &file_pgwatch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{2}
}

func (x *SyncReq) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *SyncReq) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *SyncReq) GetOperation() SyncOp {
	if x != nil {
		return x.Operation
	}
	return SyncOp_InvalidOp
}

var File_pgwatch_proto protoreflect.FileDescriptor

const file_pgwatch_proto_rawDesc = "" +
	"\n" +
	"\rpgwatch.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x1f\n" +
	"\x05Reply\x12\x16\n" +
	"\x06logmsg\x18\x01 \x01(\tR\x06logmsg\"\xff\x01\n" +
	"\x13MeasurementEnvelope\x12\x16\n" +
	"\x06DBName\x18\x01 \x01(\tR\x06DBName\x12\x1e\n" +
	"\n" +
	"MetricName\x18\x02 \x01(\tR\n" +
	"MetricName\x12D\n" +
	"\n" +
	"CustomTags\x18\x03 \x03(\v2$.MeasurementEnvelope.CustomTagsEntryR\n" +
	"CustomTags\x12+\n" +
	"\x04Data\x18\x04 \x03(\v2\x17.google.protobuf.StructR\x04Data\x1a=\n" +
	"\x0fCustomTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\aSyncReq\x12\x16\n" +
	"\x06DBName\x18\x01 \x01(\tR\x06DBName\x12\x1e\n" +
	"\n" +
	"MetricName\x18\x02 \x01(\tR\n" +
	"MetricName\x12%\n" +
	"\tOperation\x18\x03 \x01(\x0e2\a.SyncOpR\tOperation*>\n" +
	"\x06SyncOp\x12\r\n" +
	"\tInvalidOp\x10\x00\x12\t\n" +
	"\x05AddOp\x10\x01\x12\f\n" +
	"\bDeleteOp\x10\x02\x12\f\n" +
	"\bDefineOp\x10\x032\x90\x01\n" +
	"\bReceiver\x122\n" +
	"\x12UpdateMeasurements\x12\x14.MeasurementEnvelope\x1a\x06.Reply\x12\x1e\n" +
	"\n" +
	"SyncMetric\x12\b.SyncReq\x1a\x06.Reply\x120\n" +
	"\rDefineMetrics\x12\x17.google.protobuf.Struct\x1a\x06.ReplyB\x06Z\x04.;pbb\x06proto3"

var (
	file_pgwatch_proto_rawDescOnce sync.Once
	file_pgwatch_proto_rawDescData []byte
)

func file_pgwatch_proto_rawDescGZIP() []byte {
	file_pgwatch_proto_rawDescOnce.Do(func() {
		file_pgwatch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pgwatch_proto_rawDesc), len(file_pgwatch_proto_rawDesc)))
	})
	return file_pgwatch_proto_rawDescData
}

var file_pgwatch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pgwatch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pgwatch_proto_goTypes = []any{
	(SyncOp)(0),                 // 0: SyncOp
	(*Reply)(nil),               // 1: Reply
	(*MeasurementEnvelope)(nil), // 2: MeasurementEnvelope
	(*SyncReq)(nil),             // 3: SyncReq
	nil,                         // 4: MeasurementEnvelope.CustomTagsEntry
	(*structpb.Struct)(nil),     // 5: google.protobuf.Struct
}
var file_pgwatch_proto_depIdxs = []int32{
	4, // 0: MeasurementEnvelope.CustomTags:type_name -> MeasurementEnvelope.CustomTagsEntry
	5, // 1: MeasurementEnvelope.Data:type_name -> google.protobuf.Struct
	0, // 2: SyncReq.Operation:type_name -> SyncOp
	2, // 3: Receiver.UpdateMeasurements:input_type -> MeasurementEnvelope
	3, // 4: Receiver.SyncMetric:input_type -> SyncReq
	5, // 5: Receiver.DefineMetrics:input_type -> google.protobuf.Struct
	1, // 6: Receiver.UpdateMeasurements:output_type -> Reply
	1, // 7: Receiver.SyncMetric:output_type -> Reply
	1, // 8: Receiver.DefineMetrics:output_type -> Reply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pgwatch_proto_init() }
func file_pgwatch_proto_init() {
	if File_pgwatch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pgwatch_proto_rawDesc), len(file_pgwatch_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pgwatch_proto_goTypes,
		DependencyIndexes: file_pgwatch_proto_depIdxs,
		EnumInfos:         file_pgwatch_proto_enumTypes,
		MessageInfos:      file_pgwatch_proto_msgTypes,
	}.Build()
	File_pgwatch_proto = out.File
	file_pgwatch_proto_goTypes = nil
	file_pgwatch_proto_depIdxs = nil
}
